<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <connectionStrings>
    <add name="IntactDBContext" providerName="System.Data.SqlClient" connectionString="Data Source=LOCALHOST\SQLEXPRESS2014;Initial Catalog=Intact01;Integrated Security=True;Application Name=TestdocViewer" />
  </connectionStrings>
  <system.diagnostics>
    <sources>
      <source name="testdocviewer" switchValue="All">
        <listeners>
          <add name="delimfile" />
        </listeners>
      </source>
      <source name="testdocviewer.models" switchValue="All">
        <listeners>
          <add name="delimfile.models" />
        </listeners>
      </source>
      <source name="testdocviewer.commands" switchValue="All">
        <listeners>
          <add name="delimfile.commands" />
        </listeners>
      </source>
      <source name="testdocviewer.ressources" switchValue="All">
        <listeners>
          <add name="delimfile.ressources" />
        </listeners>
      </source>
      <source name="testdocviewer.views" switchValue="All">
        <listeners>
          <add name="delimfile.views" />
        </listeners>
      </source>
      <source name="testdocviewer.ui" switchValue="All">
        <listeners>
          <add name="delimfile.ui" />
        </listeners>
      </source>
      <!-- only for debugging-purposes, does not work with app-launcher:
      <source name="testdocviewer.uiprofile" switchValue="All">
        <listeners>
          <add name="console" />
        </listeners>
      </source>
      -->
    </sources>
    <sharedListeners>
      <add name="delimfile" type="System.Diagnostics.DelimitedListTraceListener" delimiter=";" initializeData="tracelog.csv" traceOutputOptions="ProcessId, DateTime" />
      <add name="delimfile.models" type="System.Diagnostics.DelimitedListTraceListener" delimiter=";" initializeData="tracelog_models.csv" traceOutputOptions="ProcessId, DateTime" />
      <add name="delimfile.commands" type="System.Diagnostics.DelimitedListTraceListener" delimiter=";" initializeData="tracelog_commands.csv" traceOutputOptions="ProcessId, DateTime" />
      <add name="delimfile.ressources" type="System.Diagnostics.DelimitedListTraceListener" delimiter=";" initializeData="tracelog_ressources.csv" traceOutputOptions="ProcessId, DateTime" />
      <add name="delimfile.views" type="System.Diagnostics.DelimitedListTraceListener" delimiter=";" initializeData="tracelog_views.csv" traceOutputOptions="ProcessId, DateTime" />
      <add name="delimfile.ui" type="System.Diagnostics.DelimitedListTraceListener" delimiter=";" initializeData="tracelog_ui.csv" traceOutputOptions="ProcessId, DateTime" />
      <add name="console" type="System.Diagnostics.ConsoleTraceListener" />
    </sharedListeners>
  </system.diagnostics>
  <appSettings>
    <!--Variabili di gestione Invio Risulato-->
    <add key="isSendingEnable" value="1" />
    <add key="ipAddres" value="192.168.62.230" />
    <!--  172.21.191.144 -->
    <add key="dbUserName" value="SendTyreResult" />
    <add key="dbUserPassword" value="Pirelli2024!" />
    <add key="dbStoredName" value="SendTyreResult_XRAY" />
    <add key="dbNameStored" value="PCS_CAR" />
    <add key="ppCode" value="IO1" />
    <add key="mchCode" value="XRAY1" />
    <add key="SerialNumber" value="1234" />
    <add key="MaxNrOfTests" value="500" />
    <!-- ResultListUpdateType:
         The way, the result-list update is triggered and behaves.
         - PeriodicallyAddOnly : every PollingTimeout the result list is updated.
                                 Only additional tests are detected.
         - PeriodicallyAddAndDel : every PollingTimeout the result list is updated.
                                   Additional and removed tests are detected.
                                   Needs more computation power than PeriodicallyAddOnly.
         - RemoteAddOnly : Update is triggered by remote. Only additional tests can be detected.
         -->
    <add key="ResultListUpdateType" value="PeriodicallyAddAndDel" />
    <!-- PollingTimeout:
         Database is polled for new results every
         PollingTimeout milliseconds   -->
    <add key="PollingTimeout" value="3000" />
    <add key="ResultWithdrawTimeout" value="20" />
    <!-- Compression on eval: 
         compresses the images in database (with CompressionQuality)
         when result is evaluated (good/bad/doubt)  -->
    <add key="CompressOnEval" value="false" />
    <add key="CompressionQuality" value="15" />
    <!-- ShowPressure:
          "true" shows pressure values for tread and sidewall in complete view and in TestDocViewer UI
          "false" shows no pressure values-->
    <add key="ShowPressure" value="true" />
    <!-- VerifyOwnSavePath:
         declares if verify results should be stored in own path-->
    <add key="VerifyOwnSavePath" value="true" />
    <!-- VerifyExportPath:
         Export Path for verify tests if they should be stored seperately-->
    <add key="VerifySavePath" value="E:\Results\Verify" />
    <!--ShowMachineParams:
        Declares how many machine parameters should be shown on GUI-->
    <add key="ShowMachineParams" value="true" />
    <!--PrintFaultsInReport:
        declares whether faults should be printed in report or not, or if both versions shoudl be printed
        0: with faults
        1: without faults
        2: both versions-->
    <add key="PrintFaultsInReport" value="0" />
    <!--PrintUserInfoTable:
        Declares whether the User Infos are printed on the same page as images or on extra page, or the User Infos aren´t printed at all
        0: print on same page
        1: print on extra page
        2: no print-->
    <add key="PrintUserInfoTable" value="0" />
    <!-- DBConnectType can have values
         direct: connecting to database through ADO.NET
         remote: connecting to wcf intacta data service.
                 for this, the intact-data-service has to
                 be started, of course -->
    <!-- <add key="DBConnectType" value="direct"/> -->
    <add key="DBConnectType" value="direct" />
    <!-- ResultListOrder:
         RecentFirst,
         OldestFirst,
         NonEvalOldFirst
         -->
    <add key="ResultListOrder" value="RecentFirst" />
    <!-- MinimizeOnEval:
         minimizes the window after evaluation.
         -->
    <add key="MinimizeOnEval" value="false" />
    <!-- OnEvalExport: 
         Values:
         None
         Export
         ExportAndDelete
      
         if activated, then
          when result is evaluated, it exports the result
          to FolderGood, FolderBad, FolderDoubt
         -->
    <add key="OnEvalExportMode" value="Export" />
    <!-- Folders:
         You can use Patterns as descriped at ExportFilePattern below.
         E.g.
         value = "E:\Results\Reject\{TESTDATE}"
         -->
    <add key="FolderGood" value="E:\Results\Accept" />
    <add key="FolderBad" value="E:\Results\Reject" />
    <add key="FolderDoubt" value="E:\Results\Doubt" />
    <add key="FolderNoEval" value="E:\Results\NoEval" />
    <!-- ShowNonEvalOnly can have values:
         false:   all results are listed always
         true:    only evaluated results are listed always
         select:  checkbox is shown for selecting the behavior   -->
    <add key="ShowNonEvalOnly" value="select" />
    <add key="HideGoodButton" value="false" />
    <add key="HideDoubtButton" value="false" />
    <add key="HideBadButton" value="false" />
    <add key="HideImportButton" value="false" />
    <add key="HideSafeButton" value="true" />
    <add key="ToolbarButtonPixelWidth" value="80" />
    <add key="FilterByInternalInfo" value="false" />
    <add key="InternalInfoFilterName" value="na" />
    <add key="InternalInfoFilterValue" value="na" />
    <add key="ExportFileFormat" value="Pattern" />
    <!-- ExportFilePattern:
         If ExportFileFormat is set to "Pattern", then
         ExportFilePattern describes, how to build the name
         of the file of the exported result.
         Any value is allowed, that consists of valid filename-characters 
         (see https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file).
         There are some special variables, that can be
         inserted. 
         Such a variable must be surrounded by curly braces {...variable...}.
         The following variables are available:
         - {DATE}     :  the current date
         - {TIME}     :  the current time
         - {TESTDATE} :  the date the test was carried out
         - {TESTTIME} :  the time the test was carried out
         - {RATING}   :  the evaluation value of the result. resolves to one of
                       - UNRATED
                       - GOOD
                       - DOUBT
                       - BAD
         - all the User-Info Identifiers: 
                       for example, if the result contains a User-Info-Value
                       for Barcode, the variable {BARCODE} can be used.
                       This value has to consist of valid filename-characters also.
         Examples:
           
           The pattern {BARCODE}_{TESTDATE}_{TESTTIME} builds a filename
           with the User-Info BARCODE followed by an underscore, followed
           by the tesing-date, underscore and testing time.
             => e. g. 012343210_2018-07-12_15-01-36
         
           Eval-{RATING}_TestAt-{TESTDATE}#{TESTTIME}_ExpAt-{DATE}#{TIME}
             => e. g. Eval-GOOD_TestAt-2018-06-20#14-30-14_ExpAt-2018-06-21#09:01:53  
    -->
    <add key="ExportFilePattern" value="{BARCODE}_{TESTDATE}_{TESTTIME}" />
    <add key="ExportFileDateFormat" value="YMD" />
    <add key="ExportWithFaultDiagram" value="true" />
    <add key="ExportWithFaultTable" value="true" />
    <!-- ExportVideoImages:
         true: VideoImages will be exported.
         false: VideoImages will not be exported-->
    <add key="ExportVideoImages" value="true" />
    <add key="ExportPhaseImages" value="true" />
    <add key="FileNameCompleteView" value="CompleteView" />
    <add key="FileNameFaultDiagram" value="graph" />
    <add key="FileNameUserInfoData" value="UserInfoData" />
    <add key="FileNameFaultTable" value="FaultTable" />
    <!-- InputValidation
         Values:
         None
         BarcodeAndReason
    -->
    <add key="InputValidation" value="None" />
    <!-- NavigationStyle 
         Values:
         ComboBoxes
         Tabbed
    -->
    <add key="NavigationStyle" value="Tabbed" />
    <!-- DbName:
         Registry-Subpath to look for parameters -->
    <add key="DbName" value="Intact01" />
    <!-- ThrottleTimeout in Milliseconds.
         Table entries are written to the database, if the time between character inputs is
         greater then ThrottleTimeout.
    -->
    <add key="ThrottleTimeout" value="500" />
    <!-- Colors for fault representation -->
    <add key="FaultColorClass1" value="Yellow" />
    <add key="FaultColorClass2" value="Orange" />
    <add key="FaultColorClass3" value="Red" />
    <add key="FaultColorUser" value="IndianRed" />
    <add key="FaultColorLegacy" value="IndianRed" />
    <add key="FaultColorDefault" value="Gray" />
    <add key="MarkColorDefault" value="Lime" />
    <add key="MarkColorPrint" value="Black" />
    <add key="AutoCompletionEnabled" value="true" />
    <!-- FontMode
         Values:
         Default
         System
         Custom
    -->
    <add key="FontMode" value="Default" />
    <!-- In case FontMode is set to "Custom",
         set CustomFont to desired font-name (e. g. "Arial" or "Microsoft YaHei").
         It will be ignored, if FontMode is not "Custom" -->
    <add key="CustomFont" value="Arial" />
    <add key="ViewerActionButtonFont" value="Verdana; 8pt; style=bold" />
    <add key="ViewerLabelButtonFont" value="Verdana; 8pt; style=regular" />
    <add key="ChartValueFont" value="Microsoft Sans Serif; 9pt; style=regular" />
    <add key="StandardFont" value="Verdana; 12pt; style=regular" />
    <add key="NavigatorFont" value="Verdana; 10pt; style=bold" />
    <add key="LabelFont" value="Verdana; 6.5; style=regular" />
    <add key="PageHeaderFont" value="Verdana; 6.5pt; style=bold" />
    <add key="PageTitleFont" value="Verdana; 10pt; style=bold" />
    <add key="BasePanelElementFont" value="Verdana; 5pt; style=bold" />
    <add key="BasePanelTextFont" value="Verdana; 13pt; style=bold" />
    <add key="ResultListFont" value="Microsoft Sans Serif; 11.25pt; style=bold" />
    <add key="ProfileEditorFont" value="Microsoft Sans Serif; 12pt; style=regular" />
    <add key="MessageViewFont" value="Verdana; 9pt; style=regular" />
    <!-- SidewallExpansion (for fault-marking and -calculation)
         Expands the sidewall-diameters by value %
    -->
    <add key="SidewallExpansion" value="5" />
  </appSettings>
  <system.serviceModel>
    <bindings>
      <netTcpBinding>
        <binding name="netTcpBindingConfig" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" transactionFlow="false" transferMode="Buffered" transactionProtocol="OleTransactions" hostNameComparisonMode="StrongWildcard" listenBacklog="10" maxBufferPoolSize="524288" maxBufferSize="200000000" maxConnections="10" maxReceivedMessageSize="200000000">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="200000000" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="false" />
          <security mode="None">
            <transport clientCredentialType="None" />
            <message clientCredentialType="None" />
          </security>
        </binding>
      </netTcpBinding>
    </bindings>
    <client>
      <endpoint address="net.tcp://localhost:4300/IntactDataService" binding="netTcpBinding" bindingConfiguration="netTcpBindingConfig" contract="IntactDataService.ClientProxy.IIntactDataService"></endpoint>
    </client>
  </system.serviceModel>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.IO" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.6.10.0" newVersion="2.6.10.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Runtime" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.6.10.0" newVersion="2.6.10.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Threading.Tasks" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.6.10.0" newVersion="2.6.10.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Runtime" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.6.10.0" newVersion="2.6.10.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Threading.Tasks" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.6.10.0" newVersion="2.6.10.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>